//函数

					//static的使用
					//当static修饰全局变量时，局部变量与其相同时，static的修饰作用无效
//
//#include<stdio.h>
//
//	static int x=20;
//	void f1(int x)
//	{
//		x+=10;
//		printf("%d   f1(intx)\n",x);
//	}
//
//	void f2()
//	{
//		x+=10;
//		printf("%d   f2()\n",x);
//	}
//	
//int main()
//{
//	int x=10
//	 f1( x);
//	  f2();
//	 printf("%d   main()\n",x);
//	 return 0;
//}
										//static修饰的局部变量具有累加效果
//#include<stdio.h>
//void f(int j)
//{
//	static int a=10;
//	int b=1;
//	b++;
//	printf("%d+%d+%d=%d\n",a,b,j,a+b+j);
//	a+=10;
//}
//int main(){
//	int i=0;
//	for(i=0;i<4;i++)
//	f(i);
//	return 0;
//}

//求出所给整数的每一位的乘积
//#include<stdio.h>
//int fun(int n)
//{int k=1;
//	do
//	{
//	
//	k*=n%10;
//	n/=10;
//	}
//	while(n>0);
//	return k;
//}
//int main()
//{
//	int n;
//	scanf("%d",&n);
//	printf("%d ",fun(n));
//	return 0;
//}

//宏定义相关解释

//注意带参数的宏定义在书写的过程中，形参之间可以出现空格，但是宏名与形参列表之间不能够有空格出现
//#define M(X,Y) X-Y
//不可以写成： #define M  (X,Y) X-Y
//#define M(2,3) == 2-3
// 宏展开只是简单的符号替换，并没有将其计算
//#define M(x) x*x
//#define M(2-3)  == 2-3*2-3
//#include<stdio.h>
//#define M(r) r*r
//int main()
//{
//	int m,n;
//	scanf("%d",&n);
//	m=(n*n);
//	printf("%d\n",m);
//	printf("%d\n",M(5));
//	printf("%d\n",M(2+3));
//	return 0;
//}


//利用宏定义交换两变量的值
//#include<stdio.h>
//#define E(a,b) a=a+b,b=a-b,a=a-b
//int main()
//{
//	int m,n;
//	scanf("%d%d",&m,&n);
//	E(m,n);
//	printf("m=%d n=%d\n",m,n);
//	return 0;
//}

//#include<stdio.h>
//int fun(int n)
//{
//	int i=0;
//	int ret =1;
//	for(i=1;i<=n;i++)
//	{
//		ret*=i;
//	}
//	return ret;
//}
//int main()
//{
//	int n;
//	int i=0;
//	int sum=0;
//	scanf("%d",&n);
//	for(i=0;i<n;i++)
//	{
//		sum+=fun(i+1);
//	}
//	printf("%ld\n",sum);
//%ld 指的是输出的数据类型是 long int
//	return 
//}
